// Code generated by mockery v2.43.0. DO NOT EDIT.

package mocks

import (
	distribution "github.com/distribution/distribution/v3"
	mock "github.com/stretchr/testify/mock"
)

// Describable is an autogenerated mock type for the Describable type
type Describable struct {
	mock.Mock
}

// Descriptor provides a mock function with given fields:
func (_m *Describable) Descriptor() distribution.Descriptor {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Descriptor")
	}

	var r0 distribution.Descriptor
	if rf, ok := ret.Get(0).(func() distribution.Descriptor); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(distribution.Descriptor)
	}

	return r0
}

// NewDescribable creates a new instance of Describable. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewDescribable(t interface {
	mock.TestingT
	Cleanup(func())
}) *Describable {
	mock := &Describable{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
