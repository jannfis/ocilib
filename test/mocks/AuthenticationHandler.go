// Code generated by mockery v2.43.0. DO NOT EDIT.

package mocks

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// AuthenticationHandler is an autogenerated mock type for the AuthenticationHandler type
type AuthenticationHandler struct {
	mock.Mock
}

// AuthorizeRequest provides a mock function with given fields: req, params
func (_m *AuthenticationHandler) AuthorizeRequest(req *http.Request, params map[string]string) error {
	ret := _m.Called(req, params)

	if len(ret) == 0 {
		panic("no return value specified for AuthorizeRequest")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*http.Request, map[string]string) error); ok {
		r0 = rf(req, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Scheme provides a mock function with given fields:
func (_m *AuthenticationHandler) Scheme() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Scheme")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// NewAuthenticationHandler creates a new instance of AuthenticationHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAuthenticationHandler(t interface {
	mock.TestingT
	Cleanup(func())
}) *AuthenticationHandler {
	mock := &AuthenticationHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
