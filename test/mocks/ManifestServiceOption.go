// Code generated by mockery v2.43.0. DO NOT EDIT.

package mocks

import (
	distribution "github.com/distribution/distribution/v3"
	mock "github.com/stretchr/testify/mock"
)

// ManifestServiceOption is an autogenerated mock type for the ManifestServiceOption type
type ManifestServiceOption struct {
	mock.Mock
}

// Apply provides a mock function with given fields: _a0
func (_m *ManifestServiceOption) Apply(_a0 distribution.ManifestService) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for Apply")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(distribution.ManifestService) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewManifestServiceOption creates a new instance of ManifestServiceOption. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewManifestServiceOption(t interface {
	mock.TestingT
	Cleanup(func())
}) *ManifestServiceOption {
	mock := &ManifestServiceOption{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
