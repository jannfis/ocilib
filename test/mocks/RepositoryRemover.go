// Code generated by mockery v2.43.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	reference "github.com/distribution/distribution/v3/reference"
)

// RepositoryRemover is an autogenerated mock type for the RepositoryRemover type
type RepositoryRemover struct {
	mock.Mock
}

// Remove provides a mock function with given fields: ctx, name
func (_m *RepositoryRemover) Remove(ctx context.Context, name reference.Named) error {
	ret := _m.Called(ctx, name)

	if len(ret) == 0 {
		panic("no return value specified for Remove")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, reference.Named) error); ok {
		r0 = rf(ctx, name)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewRepositoryRemover creates a new instance of RepositoryRemover. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRepositoryRemover(t interface {
	mock.TestingT
	Cleanup(func())
}) *RepositoryRemover {
	mock := &RepositoryRemover{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
